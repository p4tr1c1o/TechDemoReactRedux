{"version":3,"sources":["reducers/productos-reducer.tsx","reducers/snackbar-reducer.tsx","actions/productos-actions.tsx","hooks.tsx","components/productos/producto-formulario/producto-formulario.tsx","domain/producto-model.ts","components/productos/productos-gestion/productos-gestion.tsx","App.tsx","store.tsx","index.tsx"],"names":["productosSlice","createSlice","name","initialState","procesando","allProductos","reducers","PROCESANDO","state","SET_PRODUCTOS","action","payload","ADD_PRODUCTO","EDIT_PRODUCTO","map","producto","id","REMOVE_PRODUCTO","filter","p","actions","snackbarSlice","message","showMessage","SUCCESS","severity","ERROR","CLEAR","undefined","handleErrors","response","ok","Error","status","statusText","useAppDispatch","useDispatch","useAppSelector","useSelector","ProductoFormulario","props","Dialog","open","onClose","onCancelar","maxWidth","DialogTitle","DialogContent","initialValues","model","nombre","descripcion","validate","values","errors","length","onSubmit","onGuardar","isSubmitting","submitForm","className","Box","margin","component","TextField","type","variant","fullWidth","label","required","multiline","rows","Button","onClick","color","disabled","Producto","init","productoId","Object","assign","this","buildBotonesGrilla","onEdit","onDelete","params","IconButton","row","ProductosGestion","dispatch","useState","openDialog","setOpenDialog","prod","console","log","setModel","productos","loading","columns","field","headerName","width","align","headerAlign","disableColumnMenu","flex","renderCell","fetch","getApiURL","method","headers","body","JSON","stringify","then","json","catch","e","error","sortable","disableClickEventBubbling","useEffect","data","CircularProgress","Card","pageSize","result","createProducto","REACT_APP_ENV","process","toLowerCase","App","snackbar","Paper","Snackbar","autoHideDuration","elevation","store","configureStore","reducer","snackbarReducer","productosReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f162873.chunk.js","sourcesContent":["import Producto from '../domain/producto-model'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState, } from '../store';\r\n\r\ntype ProductosState = {\r\n    procesando: boolean,\r\n    allProductos: Producto[]\r\n}\r\n\r\nconst initialState: ProductosState = {\r\n    procesando: false,\r\n    allProductos: []\r\n}\r\n\r\nconst productosSlice = createSlice({\r\n    name: \"productos\",\r\n    initialState,\r\n    reducers: {\r\n        PROCESANDO: (state: ProductosState) => {\r\n            state.procesando = true;\r\n        },\r\n        SET_PRODUCTOS: (state: ProductosState, action: PayloadAction<Producto[]>) => {\r\n            state.procesando = false;\r\n            state.allProductos = action.payload;\r\n        },\r\n        ADD_PRODUCTO: (state: ProductosState, action: PayloadAction<Producto>) => {\r\n            state.procesando = false;\r\n            state.allProductos = [...state.allProductos, action.payload];\r\n        },\r\n        EDIT_PRODUCTO: (state, action) => {\r\n            state.procesando = false;\r\n            state.allProductos = state.allProductos\r\n                .map(producto => (producto.id === action.payload.id) ? action.payload : producto)\r\n        },\r\n        REMOVE_PRODUCTO: (state, action: PayloadAction<Producto>) => {\r\n            state.procesando = false;\r\n            state.allProductos = state.allProductos.filter(p => p.id !== action.payload.id)\r\n        },\r\n    }\r\n});\r\n\r\n// Selectors\r\nexport const allProductos = (state: RootState) => state.productos;\r\n\r\nexport const {\r\n    PROCESANDO,\r\n    SET_PRODUCTOS,\r\n    ADD_PRODUCTO,\r\n    EDIT_PRODUCTO,\r\n    REMOVE_PRODUCTO,\r\n} = productosSlice.actions\r\n\r\nexport default productosSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\ntype SnackbarState = {\r\n    message: string,\r\n    showMessage: boolean,\r\n    severity?: \"error\" | \"warning\" | \"info\" | \"success\"\r\n}\r\n\r\nconst initialState: SnackbarState = {\r\n    message: '',\r\n    showMessage: false,\r\n}\r\n\r\nconst snackbarSlice = createSlice({\r\n    name: \"snackbar\",\r\n    initialState,\r\n    reducers: {\r\n        SUCCESS: (state: SnackbarState, action: PayloadAction<string>) => {\r\n            state.showMessage = true;\r\n            state.message = action.payload;\r\n            state.severity = 'success'\r\n        },\r\n        ERROR: (state: SnackbarState, action: PayloadAction<string>) => {\r\n            state.showMessage = true;\r\n            state.message = action.payload;\r\n            state.severity = 'error'\r\n        },\r\n        CLEAR: (state) => {\r\n            state.message = '';\r\n            state.showMessage = false;\r\n            state.severity = undefined;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    SUCCESS,\r\n    ERROR,\r\n    CLEAR\r\n} = snackbarSlice.actions\r\n\r\nexport default snackbarSlice.reducer\r\n","import { getApiURL } from '../App';\r\nimport Producto from '../domain/producto-model';\r\nimport { SET_PRODUCTOS, ADD_PRODUCTO, EDIT_PRODUCTO, REMOVE_PRODUCTO } from '../reducers/productos-reducer';\r\nimport { ERROR, SUCCESS } from '../reducers/snackbar-reducer';\r\n\r\n\r\nexport function getProductos() {\r\n    return dispatch => {\r\n        // fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n        fetch(`http://${getApiURL()}/productos`, { method: \"GET\" })\r\n            .then(handleErrors)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                dispatch(SET_PRODUCTOS(data));\r\n            });\r\n    };\r\n}\r\n\r\nexport function createProducto(producto: Producto) {\r\n    return dispatch => {\r\n        fetch(`http://${getApiURL()}/productos`, {\r\n            method: \"POST\",\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify(producto)\r\n        })\r\n            .then(handleErrors)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                dispatch(ADD_PRODUCTO(result.producto));\r\n                dispatch(SUCCESS(\"Producto Creado\"));\r\n            });\r\n    };\r\n}\r\n\r\nexport function updateProducto(producto: Producto) {\r\n\r\n    return dispatch => {\r\n        fetch(`http://${getApiURL()}/productos`, {\r\n            method: \"PUT\",\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify(producto)\r\n        })\r\n            .then(handleErrors)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // console.log(data);\r\n                dispatch(EDIT_PRODUCTO(result.producto));\r\n                dispatch(SUCCESS(\"Cambios Guardados\"));\r\n            });\r\n    };\r\n}\r\n\r\nexport function deleteProducto(producto: Producto) {\r\n    return dispatch => {\r\n        fetch(`http://${getApiURL()}/productos`, {\r\n            method: \"DELETE\",\r\n            headers: { 'content-type': 'application/json' },\r\n            body: JSON.stringify({ id: producto.id })\r\n        })\r\n            .then(handleErrors)\r\n            .then(response => response.json())\r\n            .then(() => {\r\n                dispatch(REMOVE_PRODUCTO(producto));\r\n                dispatch(SUCCESS(\"Producto Eliminado\"));\r\n            })\r\n            .catch(e => {\r\n                dispatch(ERROR(e.message));\r\n                console.error(e);\r\n            });\r\n    };\r\n}\r\n\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.status + \"-\" + response.statusText);\r\n    }\r\n    return response;\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react'\r\nimport { Dialog, DialogTitle, DialogContent, Button } from '@material-ui/core'\r\nimport { Form, Formik } from 'formik'\r\nimport { TextField } from 'formik-material-ui'\r\nimport { Box } from '@material-ui/core'\r\nimport { Field } from 'formik'\r\nimport Producto from '../../../domain/producto-model'\r\nimport './producto-formulario.css';\r\n\r\ntype FormProps = {\r\n    model?: Producto,\r\n    open: boolean,\r\n    onGuardar: any,\r\n    onCancelar: any,\r\n}\r\n\r\nfunction ProductoFormulario(props: FormProps) {\r\n    return (\r\n        <Dialog open={props.open} onClose={props.onCancelar} maxWidth={false}>\r\n            <DialogTitle id=\"form-dialog-title\">Producto</DialogTitle>\r\n            <DialogContent>\r\n\r\n                <Formik\r\n                    initialValues={{\r\n                        id: props.model?.id,\r\n                        nombre: props.model?.nombre ?? \"\",\r\n                        descripcion: props.model?.descripcion ?? \"\",\r\n                    }}\r\n                    validate={(values) => {\r\n                        let errors: Partial<Producto> = {};\r\n\r\n                        if (values.nombre.length < 3) {\r\n                            errors.nombre = \"Por favor ingrese un nombre valido\";\r\n                        }\r\n\r\n                        return errors;\r\n                    }}\r\n                    onSubmit={(values) => {\r\n                        // console.log(values);\r\n                        props.onGuardar(values);\r\n                    }} >\r\n                    {({ isSubmitting, submitForm }) => (\r\n                        <Form className=\"formulario column\">\r\n                            <Box margin={1}>\r\n                                <Field\r\n                                    component={TextField}\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth={true}\r\n                                    label=\"Nombre\"\r\n                                    name=\"nombre\"\r\n                                    required={true}\r\n                                >\r\n                                </Field>\r\n                            </Box>\r\n                            <Box margin={1}>\r\n                                <Field\r\n                                    component={TextField}\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth={true}\r\n                                    label=\"Descripcion\"\r\n                                    name=\"descripcion\"\r\n                                    multiline\r\n                                    rows={4}>\r\n                                </Field>\r\n                            </Box>\r\n                            <Box className=\"row-end\">\r\n                                <Button onClick={props.onCancelar} color=\"primary\">\r\n                                    Cancelar\r\n                                </Button>\r\n                                <Button onClick={submitForm} variant=\"contained\" color=\"primary\" disabled={isSubmitting}>\r\n                                    Guardar\r\n                                </Button>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </DialogContent >\r\n        </Dialog >\r\n    )\r\n}\r\n\r\nexport default ProductoFormulario\r\n\r\n","export class Producto {\r\n    productoId: number;\r\n    nombre: string;\r\n    descripcion: string;\r\n    id: number;\r\n\r\n    constructor(init?: Partial<Producto>) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport default Producto","import { PROCESANDO } from '../../../reducers/productos-reducer'\r\nimport { createProducto, deleteProducto, getProductos, updateProducto } from '../../../actions/productos-actions'\r\nimport { useAppDispatch, useAppSelector } from '../../../hooks'\r\nimport { useEffect, useState } from 'react';\r\nimport './productos-gestion.css';\r\nimport { DataGrid, GridCellParams, GridColDef } from '@material-ui/data-grid';\r\nimport { Card, CircularProgress, IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport ProductoFormulario from '../producto-formulario/producto-formulario';\r\nimport { Producto } from '../../../domain/producto-model';\r\n\r\n\r\n\r\nexport const ProductosGestion = () => {\r\n    const dispatch = useAppDispatch();\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const prod = new Producto();\r\n\r\n    console.log(\"producto1\");\r\n\r\n    const [model, setModel] = useState<Producto>(prod);\r\n    const productos = useAppSelector(state => state.productos.allProductos);\r\n    const loading = useAppSelector(state => state.productos.procesando)\r\n    const columns: GridColDef[] = [\r\n        { field: 'id', headerName: 'ID', width: 100, align: \"center\", headerAlign: \"center\", disableColumnMenu: true },\r\n        { field: 'nombre', headerName: 'Nombre', width: 130 },\r\n        { field: 'descripcion', headerName: 'Descripcion', width: 130, flex: 1 },\r\n        {\r\n            field: 'actions', headerName: ' ', width: 150\r\n            , renderCell: buildBotonesGrilla(onEdit, onDelete), sortable: false, disableClickEventBubbling: true,\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        dispatch(PROCESANDO());\r\n        dispatch(getProductos());\r\n    }, []);\r\n\r\n    function onNuevo() {\r\n        setModel(new Producto());\r\n        setOpenDialog(true);\r\n    };\r\n\r\n    function onDelete(model) {\r\n        dispatch(deleteProducto(model));\r\n    }\r\n\r\n    function onEdit(row: Producto) {\r\n        setModel(row);\r\n        setOpenDialog(true);\r\n    }\r\n\r\n    function onGuardar(model: Producto) {\r\n        if (model.id) {\r\n            dispatch(updateProducto(model));\r\n        }\r\n        else {\r\n            dispatch(createProducto(model));\r\n        }\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    function onCancelar() {\r\n        setOpenDialog(false);\r\n    };\r\n\r\n    if (loading) return (<CircularProgress />)\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"row-end\">\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={onNuevo}>+ Nuevo Producto</Button>\r\n            </div>\r\n            <Card className=\"card-grid\">\r\n                <DataGrid rows={productos} columns={columns} pageSize={8} />\r\n            </Card>\r\n\r\n            <ProductoFormulario open={openDialog} model={model} onCancelar={onCancelar} onGuardar={onGuardar} />\r\n        </section >\r\n    )\r\n}\r\n\r\nfunction buildBotonesGrilla(onEdit: Function, onDelete: Function) {\r\n    return (params: GridCellParams) => {\r\n        return (\r\n            <article>\r\n                <strong>\r\n                    <IconButton onClick={() => onEdit(params.row)}>\r\n                        <EditIcon />\r\n                    </IconButton>\r\n                </strong >\r\n                <strong>\r\n                    <IconButton onClick={() => onDelete(params.row)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </strong >\r\n            </article>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport default ProductosGestion;\r\n","\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ProductosGestion from './components/productos/productos-gestion/productos-gestion';\r\nimport './App.css';\r\nimport { useAppDispatch, useAppSelector } from './hooks'\r\nimport { Paper } from '@material-ui/core';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { CLEAR } from './reducers/snackbar-reducer';\r\n\r\nexport const App = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { message, showMessage, severity } = useAppSelector(state => state.snackbar);\r\n\r\n    function onClose() {\r\n        dispatch(CLEAR());\r\n    }\r\n\r\n    return (\r\n\r\n        <main>\r\n            <Paper className=\"papel\">\r\n\r\n                <header>\r\n                    <h1>ENV:{process.env.NODE_ENV}</h1>\r\n                </header>\r\n                <ProductosGestion />\r\n\r\n                <Snackbar open={showMessage} autoHideDuration={6000} onClose={onClose}>\r\n                    <MuiAlert elevation={6} variant=\"filled\" onClose={onClose} severity={severity}>\r\n                        {message}\r\n                    </MuiAlert>\r\n                </Snackbar>\r\n\r\n            </Paper>\r\n        </ main>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport const getApiURL = () => {\r\n    const { REACT_APP_ENV } = process.env;\r\n    if (REACT_APP_ENV?.toLowerCase() === \"development\") {\r\n        return \"localhost:5000\";\r\n    } else {\r\n        return \"moxtechdemo.sa-east-1.elasticbeanstalk.com\";\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport snackbarReducer from './reducers/snackbar-reducer';\r\nimport productosReducer from './reducers/productos-reducer';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        snackbar: snackbarReducer,\r\n        productos: productosReducer,\r\n    },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    RootState,\r\n    unknown,\r\n    Action<string>\r\n>;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store} >\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n"],"sourceRoot":""}